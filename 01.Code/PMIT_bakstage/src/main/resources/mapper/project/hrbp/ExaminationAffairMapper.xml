<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isoftstone.pmit.project.hrbp.mapper.ExaminationAffairMapper">
    <resultMap id="ExaminationAffairMap" type="com.isoftstone.pmit.project.hrbp.entity.ExaminationAffair">
        <id column="affair_id" property="affairID"></id>
        <result column="affair_name" property="affairName"></result>
        <result column="system" property="system"></result>
        <result column="series" property="series"></result>
        <result column="bu" property="bu"></result>
        <result column="create_by" property="createBy"></result>
        <result column="update_by" property="updateBy"></result>
        <result column="update_time" property="updateTime"></result>
        <collection property="examinationDimensionList" ofType="com.isoftstone.pmit.project.hrbp.entity.ExaminationDimension">
            <result column="dimension_id" property="dimensionID"></result>
            <result column="dimension_name" property="dimensionName"></result>
            <result column="mark" property="mark"></result>
            <result column="explanation" property="explanation"></result>
        </collection>
    </resultMap>
    <select id="findAllAffair" parameterType="ExaminationAffair" resultMap="ExaminationAffairMap">
        SELECT
        mea.*,
        med.*
        FROM
        mms_examination_affair mea
        LEFT JOIN mms_affair_dimension mad ON mad.affair_id = mea.affair_id
        LEFT JOIN mms_examination_dimension med ON mad.dimension_id = med.dimension_id
        <where>
        <if test="null != affairName and affairName != ''">
            and affair_name like CONCAT('%',#{affairName},'%')
        </if>
        <if test="null != system and system != ''">
            and system = #{system}
        </if>
        <if test="null != series and series != ''">
            and series like CONCAT('%',#{series},'%')
        </if>
        <if test="null != bu and bu != ''">
            and bu  = #{bu}
        </if>
        </where>
    </select>
    <delete id="deleteAffair" parameterType="java.lang.Integer">
       DELETE ea,ad,ed
       FROM mms_examination_affair ea
       LEFT OUTER JOIN mms_affair_dimension ad
       ON ea.affair_id = ad.affair_id
       LEFT OUTER JOIN mms_examination_dimension ed
       ON ad.dimension_id = ed.dimension_id
       WHERE ea.affair_id = #{affairID}
    </delete>
    <update id="updateAffair" parameterType="ExaminationAffair">
        update mms_examination_affair
        <set>
            <if test="affairName != null and affairName != ''">affair_name = #{affairName},</if>
            <if test="system != null and system != ''">system = #{system},</if>
            <if test="series != null and series != ''">series = #{series},</if>
            <if test="bu != null and bu != ''">bu = #{bu},</if>
            <if test="employeeID != null and employeeID != ''">
                update_by = (SELECT
                employee_name
                FROM
                mms_login_information
                WHERE
                employee_ID = #{employeeID}),</if>
            update_time = now()
        </set>
        where affair_id = #{affairID}
    </update>

    <select id="findExamAffairByAffairId" parameterType="java.lang.Integer" resultType="ExaminationAffair">
        select
        affair_id as affairID,
        affair_name as affairName,
        system as system,
        series as series,
        bu as bu,
        create_by as createBy,
        update_by as updateBy,
        update_time as updateTime
        from
        mms_examination_affair
        where affair_id = #{affairID}
    </select>
    <insert id="insertAffair" parameterType="com.isoftstone.pmit.project.hrbp.entity.ExaminationAffair">
        insert into mms_examination_affair(affair_name,system,series,bu,create_by,update_by,update_time)
        select #{affairName},#{system},#{series},#{bu},(SELECT
	    employeeName
        FROM
	    mms_base_staff_info
        WHERE
	    employeeID = #{employeeID}) employeeName,#{updateBy},NOW() from dual
        where not exists(
	    select * from mms_examination_affair where affair_name = #{affairName} and system = #{system} and series = #{series} and bu = #{bu}
        )
    </insert>
    <select id="findExamAffairSystem" resultType="ExaminationAffair">
        select
        DISTINCT(system)
        from mms_examination_affair
    </select>
    <select id="findExamAffairSeries" resultType="ExaminationAffair">
        select
        DISTINCT(series)
        from mms_examination_affair
    </select>
    <select id="findAllAffairName" resultType="ExaminationAffair">
        select
        DISTINCT(affair_name) as AffairName
        from mms_examination_affair
    </select>
</mapper>
