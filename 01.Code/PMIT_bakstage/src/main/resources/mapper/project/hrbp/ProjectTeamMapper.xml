<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isoftstone.pmit.project.hrbp.mapper.ProjectTeamMapper">

	<select id="queryProjectTeamData" parameterType="java.util.Map"  resultType="com.isoftstone.pmit.project.hrbp.entity.TeamInfo">
		select
			team_id as teamId,
			team_name as teamName,
			staff_id as staffId,
			staff_name as staffName,
			position as position,
			parent_id as parentId,
			level as level
		from
			hrbp_projectTeam
		where
			team_id = ${teamId}
	</select>

	<select id="queryResourcePoolData" parameterType="java.util.Map" resultType="java.util.Map">
		select
			employeeId as staffId,
			employeeName as staffName
		from
			base_staff_info
		where
			1=1
		<if test="null != pdu and pdu != ''">
            AND pdu = '${pdu}'
        </if>
        <if test="null != gender and gender != ''">
            AND sex = '${gender}'
        </if>
        <if test="null != area and area != ''">
            AND workplacearea = '${area}'
        </if>
        <if test="null != cu and cu != ''">
            AND costcenter = '${cu}'
        </if>
        <if test="null != name and name != ''">
            AND employeeName like '%${name}%'
        </if>
        <if test="null != staffId and staffId != ''">
            AND employeeId like '%${staffId}%'
        </if>
	</select>

	<select id="queryAreaAndCuByCondition" parameterType="java.util.Map" resultType="java.util.HashMap">
		select distinct
			workPlaceArea as area,
			costCenter as cu
		from
			base_staff_info
		<if test="null != pdu and pdu != ''">
		where
			pdu = '${pdu}'
		</if>
	</select>

	<select id="addTeamInfo" parameterType="java.util.List">
		<foreach collection="list" index="index" item="teamInfo">
			update base_staff_info set currentStatus = '1' where employeeId = #{teamInfo.staffId};

			insert into hrbp_projectTeam
				(team_id, team_name, staff_id, staff_name, parent_id, level)
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level});

			insert into hrbp_projectTeamRecord
				(team_id, team_name, staff_id, staff_name, parent_id, level, change_time, status)
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level}, now(), 'enter');
		</foreach>
	</select>

	<select id="deleteTeamInfo" parameterType="java.util.List">
		<foreach collection="list" index="index" item="teamInfo">
			update base_staff_info set currentStatus = '0' where employeeId = #{teamInfo.staffId};

			delete from hrbp_projectTeam where team_id = #{teamInfo.teamId} and staff_id = #{teamInfo.staffId};

			insert into hrbp_projectTeamRecord
				(team_id, team_name, staff_id, staff_name, parent_id, level, change_time, status)
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level}, now(), 'out');
		</foreach>
	</select>

	<select id="teamRelatedPo" parameterType="java.util.Map">
		insert into team_related_po values (#{teamId}, #{projectId})
	</select>

	<select id="queryProjectInformation" parameterType="java.util.Map" resultType="java.util.Map">
		select
			projectId,
			projectName,
			bu,
			du,
			pdu,
			date_format(startTime, '%Y-%m-%d') as startDate,
			date_format(endTime, '%Y-%m-%d') as endDate
		from
			project_information
		where
		    1=1
			<if test="null != bu and bu != ''">
				and bu like '%${bu}%'
			</if>
			<if test="null != du and du != ''">
				and du like '%${du}%'
			</if>
			<if test="null != pdu and pdu != ''">
				and pdu like '%${pdu}%'
			</if>
			<if test="null != projectId and projectId != ''">
				and projectId like '%${projectId}%'
			</if>
			<if test="null != projectName and projectName != ''">
				and projectName like '%${projectName}%'
			</if>
	</select>

	<select id="saveProjectRole" parameterType="java.util.Map">
		insert into po_staff_info (project_id, po_role_id, team_id, staff_id, backup_staff_id, enter_time) values (#{projectId}, #{poRoleId}, #{teamId}, #{staffId}, #{backupStaffId}, now())
	</select>

	<select id="deleteProjectRole" parameterType="java.util.Map">
		delete from po_staff_info where project_id = #{projectId} and po_role_id = #{poRoleId} and team_id = #{teamId}
	</select>

	<select id="queryProjectRole" resultType="java.util.Map">
		select roleId as poRoleId, roleName as poRoleName from hrbp_special_role
	</select>

	<select id="queryProjectInformationByProjectTime" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
			team.projectId AS teamId,
			team.projectName AS teamName,
			team.pmId AS pmId,
			team.pmName AS pmName,
			po.projectid AS projectId,
			po.projectname AS projectName,
			po.starttime AS startTime,
			po.endtime AS endTime,
			po.bu AS bu,
			po.du AS du,
			po.pdu AS pdu,
			CASE WHEN 
				endTime <![CDATA[<=]]> NOW()
				THEN '结项'
				ELSE '未结项'
			END AS knotTime
		FROM 
			project_manage team,
			team_related_po tp,
			project_information po
		WHERE
			team.projectId = tp.team_id AND
			tp.project_id = po.projectId AND
			team.projectId = #{teamId}
		<if test="null != startDate and startDate != ''">
			AND po.startTime <![CDATA[>=]]> str_to_date(#{startDate}, '%Y-%m-%d') 
			AND po.startTime <![CDATA[<=]]> str_to_date(#{endDate}, '%Y-%m-%d')
		</if>
		GROUP BY
			projectId
	</select>

	<select id="queryPoStaffInfo" parameterType="java.util.Map" resultType="java.util.Map">
		select
			psi.id AS id,
			psi.project_id AS projectId,
			psi.po_role_id AS poRoleId,
			hsr.roleName AS poRoleName,
			psi.team_id AS teamId,
			psi.staff_id AS staffId,
			bsi.employeeName AS staffName,
			psi.backup_staff_id AS backupStaffId,
			bbsi.employeeName AS backupStaffName
		from
			po_staff_info psi
			inner join
				hrbp_special_role hsr
			on
				psi.po_role_id = hsr.roleId
			inner join
				base_staff_info bsi
			on
				psi.staff_id = bsi.employeeID
			inner join
				base_staff_info bbsi
			on
				psi.backup_staff_id = bbsi.employeeID
		where
			psi.project_id = #{projectId}
	</select>
	
	<select id="deleteteamRelatedPo" parameterType="java.util.Map">
		delete from team_related_po where team_id = #{teamId} and project_id = #{projectId}
	</select>
	
</mapper>
