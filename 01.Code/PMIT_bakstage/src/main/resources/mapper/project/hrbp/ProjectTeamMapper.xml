<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.isoftstone.pmit.project.hrbp.mapper.ProjectTeamMapper">

	<select id="queryProjectTeamData" parameterType="java.util.Map"  resultType="com.isoftstone.pmit.project.hrbp.entity.TeamInfo">
		select 
			team_id as teamId,
			team_name as teamName,
			staff_id as staffId,
			staff_name as staffName,
			position as position,
			parent_id as parentId,
			level as level
		from 
			hrbp_projectTeam
		where 
			team_id = ${teamId}
	</select>
	
	<select id="queryResourcePoolData" parameterType="java.util.Map" resultType="com.isoftstone.pmit.project.hrbp.entity.TeamInfo">
		select 
			employeeId as staffId,
			employeeName as staffName
		from 
			base_staff_info
		where
			1=1
		<if test="null != pdu">
            AND pdu = '${pdu}'
        </if>
        <if test="null != gender">
            AND sex = '${gender}'
        </if>
        <if test="null != area">
            AND workplace = '${area}'
        </if>
        <if test="null != cu">
            AND costcenter = '${cu}'
        </if>
        <if test="null != name">
            AND employeeName like '%${name}%'
        </if>
        <if test="null != staffId">
            AND employeeId like '%${staffId}%'
        </if>
	</select>
	
	<select id="queryAreaAndCuByCondition" parameterType="java.util.Map" resultType="java.util.HashMap">
		select distinct
			workPlaceArea as area,
			costCenter as cu
		from 
			base_staff_info
		<if test="null != pdu">
		where 
			pdu = '${pdu}'
		</if>
	</select>
	
	<select id="addTeamInfo" parameterType="java.util.List">
		<foreach collection="list" index="index" item="teamInfo">
			update base_staff_info set currentStatus = '1' where employeeId = #{teamInfo.staffId};
			
			insert into hrbp_projectTeam 
				(team_id, team_name, staff_id, staff_name, parent_id, level) 
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level});
			
			insert into hrbp_projectTeamRecord 
				(team_id, team_name, staff_id, staff_name, parent_id, level, change_time, status) 
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level}, now(), 'enter');
		</foreach>
	</select>
	
	<select id="deleteTeamInfo" parameterType="java.util.List">
		<foreach collection="list" index="index" item="teamInfo">
			update base_staff_info set currentStatus = '0' where employeeId = #{teamInfo.staffId};
			
			delete from hrbp_projectTeam where team_id = #{teamInfo.teamId} and staff_id = #{teamInfo.staffId};
						
			insert into hrbp_projectTeamRecord 
				(team_id, team_name, staff_id, staff_name, parent_id, level, change_time, status) 
			values
				(#{teamInfo.teamId}, #{teamInfo.teamName}, #{teamInfo.staffId}, #{teamInfo.staffName}, #{teamInfo.parentId}, #{teamInfo.level}, now(), 'out');
		</foreach>
	</select>
	
	<select id="teamRelatedPo" parameterType="java.util.Map">
		insert into team_related_po values (#{teamId}, #{projectId})
	</select>

	<select id="queryProjectInformation" parameterType="java.util.Map" resultType="java.util.Map">
		select
			projectId,
			projectName,
			date_format(startTime, '%Y-%m-%d') as startDate,
			date_format(endTime, '%Y-%m-%d') as endDate
		from
			project_information
		where
		    1=1
			<if test="null != bu and bu != ''">
				and bu like '%${bu}%'
			</if>
			<if test="null != du and du != ''">
				and du like '%${du}%'
			</if>
			<if test="null != pdu and pdu != ''">
				and pdu like '%${pdu}%'
			</if>
			<if test="null != projectId and projectId != ''">
				and projectId like '%${projectId}%'
			</if>
			<if test="null != projectName and projectName != ''">
				and projectName like '%${projectName}%'
			</if>
	</select>

	<select id="saveProjectRole" parameterType="java.util.Map">
		insert into po_staff_info (project_id, project_name, staff_id, team_id, po_role_id, enter_time)
		values (#{projectId}, #{projectName}, #{staffId}, #{teamId}, #{poRoleId}, now())
	</select>
</mapper>